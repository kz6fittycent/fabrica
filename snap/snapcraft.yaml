name: fabrica
base: core18
version: '1.0.2'
summary: your own snap build factory
description: |
  Fabrica is a web service to be run on an lxd appliance. It spawns a
  web ui that allows you to point to cloneable git trees, initializes
  lxd containers and builds snap packages of the provided source trees.

  To use fabrica you can use the steps below

      snap install lxd
      sudo lxd init # hit enter for all questions
      snap install fabrica
      snap connect fabrica:lxd lxd:lxd
      snap connect fabrica:mount-observe
      snap connect fabrica:system-observe

  Now fabrica will come up on port 8000.
  Point your web browser to http://localhost:8000 (or to the external
  IP instead of localhost) and add some git tree to it.

  Note that in its current state fabrica only builds snap packages for
  the used host architecture (i.e. to build armhf or arm64 snaps, you
  need to use a raspberry Pi4 and install lxd and fabrica on it)

  The branches are checked every 5 minutes for new commits. Builds start
  automatically when a new commit is detected.

  Since the service is currently only available via http and also has no
  authentication management, it is recommended to only use it in
  in-house setups.

  Issues and bugs should be filed at

  https://github.com/ogra1/fabrica/issues

grade: stable
confinement: strict

apps:
  init:
    command: bin/init.py
    daemon: simple
    plugs:
      - lxd
      - mount-observe
      - network-bind
  web:
    command: bin/web
    daemon: simple
    plugs:
      - lxd
      - mount-observe
      - network
      - network-bind
      - system-observe
  watch:
    command: bin/watch
    daemon: simple
    plugs:
      - lxd
      - mount-observe
      - network
      - network-bind
      - system-observe

parts:
  react:
    plugin: nil
    source: .
    override-build: |
      # Install node and npm
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
      export NVM_DIR="$HOME/.nvm"
      . "$NVM_DIR/nvm.sh"
      . "$NVM_DIR/bash_completion"

      nvm install lts/*
      nvm run node --version

      cd webapp
      npm install --unsafe-perm
      npm run build

      mkdir -p $SNAPCRAFT_PART_INSTALL/static/
      cp -r build/static/css $SNAPCRAFT_PART_INSTALL/static/
      cp -r build/static/js $SNAPCRAFT_PART_INSTALL/static/
      cp -r build/static/images $SNAPCRAFT_PART_INSTALL/static/
      cp build/* $SNAPCRAFT_PART_INSTALL/static/ || :
    build-packages:
      - curl
      - python-minimal
      - python-dev


  pylxd:
    plugin: python
    python-packages:
      - pylxd
    build-packages:
      - libffi-dev
      - libssl-dev
  scripts:
    source: .
    plugin: nil
    override-build: |
      snapcraftctl build
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp bin/init.py $SNAPCRAFT_PART_INSTALL/bin/

  application:
    plugin: go
    source: .
    source-type: git
    build-packages:
      - gcc
    stage-packages:
      - git
      - libcurl4-openssl-dev

  bin:
    source: snap/local
    plugin: dump
    organize:
      "*": /bin/
